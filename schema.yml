definitions:
  editor:
    propertyNames:
      type: string
      pattern: "^[^/][^:]+$"
    additionalProperties:  
      $ref: "#/definitions/editorNode"
  editorNode:
    type: object
    additionalProperties: false
    anyOf: &editorNodeAnyOf
      - oneOf:
          - required: [title]
          - required: [join]
      - required: [text]
      - required: [link]
    properties: &editorNodeProperties
      title:
        type: string
        pattern: "^[^/:]+$"
      link:
        type: string
        format: uri
      context:
        $ref: "#/definitions/slashRefString"
      join:
        $ref: "#/definitions/slashRefString"
      aka:
        type: array
        uniqueItems: true
        minItems: 1
        items:
          type: string
      links:
        $ref: "#/definitions/linkList"
      src:
        $ref: "#/definitions/src"
      text:
        $ref: "#/definitions/plainText"
      props:
        $ref: "#/definitions/props"
      next:
        $ref: "#/definitions/objRefStringList"
      later:
        $ref: "#/definitions/objRefStringList"
      list:
        $ref: "#/definitions/objRefStringList"
      related:
        $ref: "#/definitions/objRefList"
      mentions:
        # TODO computed "mentioned". If a non-parent nests a topic, include that non-parent in the mentioned list of the nested topic when it's not being rendered on that page
        $ref: "#/definitions/objRefList"
      queue:
        $ref: "#/definitions/objRefListInput"
  couchTopicUpdate:
    type: object
    additionalProperties: false
    anyOf: *editorNodeAnyOf
    required:
      - _id
      - id
      - created_at
    oneOf:
      - required: [patches]
      - required: [_deleted]
    properties:
      <<: *editorNodeProperties
      _deleted:
        type: boolean
      _id:
        type: string
      _rev:
        type: string
      patches:
        $ref: "#/definitions/patches"
      id:
        $ref: "#/definitions/slashRefString"
      created_at:
        type: number
      next:
        $ref: "#/definitions/stringList"
      later:
        $ref: "#/definitions/stringList"
      list:
        $ref: "#/definitions/stringList"
      related:
        $ref: "#/definitions/slashRefList"
      mentions:
        # TODO computed "mentioned". If a non-parent nests a topic, include that non-parent in the mentioned list of the nested topic when it's not being rendered on that page
        $ref: "#/definitions/slashRefList"
      queue:
        $ref: "#/definitions/slashRefList"
      seq:
        type: string
      topic_id:
        type: string
    dependencies:
      # these are present when deleting notes in the queue
      seq: [_deleted]
      topic_id: [_deleted]
  objRefStringList:
    type: array
    uniqueItems: true
    minItems: 1
    items:
      oneOf:
        - $ref: "#/definitions/plainText"
        - $ref: "#/definitions/objLabeledRef"
  stringList:
    type: array
    uniqueItems: true
    minItems: 1
    items:
      $ref: "#/definitions/plainText"
  patches:
    type: array
    minItems: 1
    items:
      type: object
      required:
        - op
        - field
        - value
      properties:
        op:
          type: string
          enum: [add,remove]
        field:
          type: string
        value:
          oneOf:
            - type: string
            - $ref: "#/definitions/props"
  props:
    type: object
    additionalProperties:
      oneOf:
        - $ref: "#/definitions/plainText"
        - $ref: "#/definitions/maybeLabeledLink"
        - $ref: "#/definitions/slashRefString"
    properties:
      author:
        $ref: "#/definitions/author"
      date:
        type: string
        pattern: "^20\\d{2}-\\d{2}-\\d{2}$"
  author:
    $ref: "#/definitions/slashRefString"
  src:
    oneOf:
      - $ref: "#/definitions/maybeLabeledLink"
      - $ref: "#/definitions/slashRefString"
      - type: string
        enum: [ibid]
  linkList:
    type: array
    uniqueItems: true
    minItems: 1
    items:
      $ref: "#/definitions/maybeLabeledLink"
  maybeLabeledLink:
    oneOf:
      - type: string
        format: uri
      - type: object
        additionalProperties: false
        required:
          - search
        properties:
          search:
            type: string
      - type: object
        additionalProperties: false
        required:
          - link
          - title
        properties:
          link:
            type: string
            format: uri
          title:
            type: string
  objRefListInput:
    type: array
    minItems: 1
    items:
      oneOf:
        - $ref: "#/definitions/editorNode"
        - $ref: "#/definitions/plainText"
        - $ref: "#/definitions/objLabeledRef"
  objRefList:
    type: array
    minItems: 1
    items:
      oneOf:
        - $ref: "#/definitions/objLabeledRef"
        - $ref: "#/definitions/slashRefString"
  objLabeledRef:
    type: object
    required:
      - label
      - ref
    additionalProperties: false
    properties:
      label:
        type: string
      ref:
        $ref: "#/definitions/slashRefString"
  slashRefList:
    type: array
    uniqueItems: true
    minItems: 1
    items:
      $ref: "#/definitions/slashRefString"
  slashRefString:
    type: string
    # Ref strings start with a slash
    pattern: '^/'
  plainText:
    type: string
    not:
      pattern: 'https?://'
